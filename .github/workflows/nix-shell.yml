name: Build Nix Shell

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-ubuntu-24-04:
    runs-on: ubuntu-24.04
    steps:
      - name: Remove old repo
        run: ls -lah . && rm -rf * .[a-zA-Z]*
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
      - name: Checkout repository
        uses: taiki-e/checkout-action@v1
      - name: Set up Nix
        uses: cachix/install-nix-action@v27
      - name: Remove Nix Garbage
        run: nix-collect-garbage -d
      - name: Init user env
        run: |
          ./.local/share/bin/init-nix.sh
          ./.local/share/bin/init-user-env.sh
      - name: Install dependencies
        run: |
          NIXPKGS_ALLOW_UNFREE=1 nix-shell .config/nix/dev.nix --run "echo Nix initialised successfully!"
      - name: Test bash
        run: |
          NIXPKGS_ALLOW_UNFREE=1 nix-shell .config/nix/dev.nix --run "bash -ic 'echo hello'"
      - name: Test zsh
        run: |
          NIXPKGS_ALLOW_UNFREE=1 nix-shell .config/nix/dev.nix --run "zsh -ic 'echo hello'"
      - name: Remove Nix Garbage
        run: nix-collect-garbage -d
  build-ubuntu-22-04:
    runs-on: ubuntu-22.04
    steps:
      - name: Remove old repo
        run: ls -lah . && rm -rf * .[a-zA-Z]*
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
      - name: Checkout repository
        uses: taiki-e/checkout-action@v1
      - name: Set up Nix
        uses: cachix/install-nix-action@v27
      - name: Remove Nix Garbage
        run: nix-collect-garbage -d
      - name: Init user env
        run: |
          ./.local/share/bin/init-nix.sh
          ./.local/share/bin/init-user-env.sh
      - name: Install dependencies
        run: |
          NIXPKGS_ALLOW_UNFREE=1 nix-shell .config/nix/dev.nix --run "echo Nix initialised successfully!"
      - name: Test bash
        run: |
          NIXPKGS_ALLOW_UNFREE=1 nix-shell .config/nix/dev.nix --run "bash -ic 'echo hello'"
      - name: Test zsh
        run: |
          NIXPKGS_ALLOW_UNFREE=1 nix-shell .config/nix/dev.nix --run "zsh -ic 'echo hello'"
      - name: Remove Nix Garbage
        run: nix-collect-garbage -d
  build-ubuntu-24-04-arm64:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Remove old repo
        run: ls -lah . && rm -rf * .[a-zA-Z]*
      - name: Checkout repository
        uses: taiki-e/checkout-action@v1
      - name: Set up Nix
        uses: cachix/install-nix-action@v27
      - name: Remove Nix Garbage
        run: nix-collect-garbage -d
      - name: Init user env
        run: |
          ./.local/share/bin/init-nix.sh
          ./.local/share/bin/init-user-env.sh
      - name: Install dependencies
        run: |
          NIXPKGS_ALLOW_UNFREE=1 nix-shell .config/nix/dev.nix --run "echo Nix initialised successfully!"
      - name: Test bash
        run: |
          NIXPKGS_ALLOW_UNFREE=1 nix-shell .config/nix/dev.nix --run "bash -ic 'echo hello'"
      - name: Test zsh
        run: |
          NIXPKGS_ALLOW_UNFREE=1 nix-shell .config/nix/dev.nix --run "zsh -ic 'echo hello'"
      - name: Remove Nix Garbage
        run: nix-collect-garbage -d
  # TODO: macos has a lot of packages missing. I have to figure out how to
  # filter non-existent packages before enabling it.
  # build-macos-arm64:
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: taiki-e/checkout-action@v1
  #     - name: Set up Nix
  #       uses: cachix/install-nix-action@v27
  #     - name: Init user env
  #       run: |
  #          ./.local/share/bin/init-nix.sh
  #         nix-shell .config/nix/dev.nix --run ./.local/share/bin/init-user-env.sh
  #     - name: Install dependencies
  #       run: |
  #         nix-shell .config/nix/dev.nix --run "echo Nix initialised successfully!"
  # TODO: add arm64 linux build when it is available for free on github
